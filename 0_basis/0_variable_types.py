"""
комментарии - текстовое описание внутри исходных файлов,
которые не выполняются интерпретатором,
а предназначены для описания кода.
Несут вспомогательную функцию, многие ide
используют специально оформленные коментарии для
упрощения работы пользователя.
Есть так же несколько дополнительных способов применения
коментариев, их мы рассмотрим в последующих модулях.
"""

# однострочный комментарий
'''
многострочный
комментарий
'''

"""
print("this is my message") - специальная функция, выводящая
текст, цифры и прочее в консоль.
type(val_1) - специальная функция, возвращающая тип объекта,
переданного в эту функцию.

Функция - отдельный объект, блок кода, выполнящийся при вызове этой
функции по имени из другой части кода.
Можно провести аналогии с математическими функциями.
Функция осуществляет какие-то действия, определенные внутри функции и
возвращает результат своего выполнения.
В функцию могут передаваться дополнительные значения, которые применяются
внутри функции. Подробнее функции будут рассмотрены в отдельном модуле.

print(1, 2, "text") - в функцию print можно передавать несколько аргументов,
каждый из которых будет выведет в консоль через разделитель - в данном случае
это символ пробела.
Функция print после вывода осуществляет перенос каретки консоли на новую строку
"""

# основные типы данные

# int (целые числа)
val_1 = 123
print(val_1, ":", type(val_1))
# float (числа с плавающей запятой)
val_1 = 123123.1
print(val_1, ":", type(val_1))
# string (текстовые строки)
val_1 = "this is text!!!111"
print(val_1, ":", type(val_1))
# bool (булевые значения - True или False)
val_1 = True
print(val_1, ":", type(val_1))


'''
list (структура даннных, представляющая собой последовательный список
из нескольких элементов).
Основные структуры данных будут подроднее рассмотрены в следующих модулях.
'''
val_1 = [1, 2, 3]
print(val_1, ":", type(val_1))


def func():
    '''
    def - определение собственной функции. Функци подробно будем рассматривать позже.
    Код внутри функции ОБЯЗАТЕЛЬНО пишется с отступом. Как только мы продолжим писать код на одном уровне с def - мы
    прекратим писать код внутри этой функции.
    Код в функция выполняется не сразу, а только когда эта функция будет вызвана в другой части кода по имени функции.
    Например, данная функция будет вызвана, если написать func() после 71 строчки.
    '''
    pass  # пустая команда. Не делает ничего, нужна как заглушка.


print(func, ":", type(func))
# None
val_1 = None
print(val_1, ":", type(val_1))

asd = int()
asd = int('123')
sad = float()
sad = float('123.55')
sad = str()
sad = str(123)
sad = bool()
sad = bool(0)
sad = bytes()
sad = list()
# etc...

"""
Для ввода в программу данных через консоль используется функция input(). Данная функция ВСЕГДА возвращает строку,
чтобы не ввел пользователь. В качестве аргумента передается текст, который необходимо вывести в консоли для пользователя.
"""

text = input()
text = input("Введите текст:")
